{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/pitri/Desktop/nft-minter v2 (added recipient for NFT)/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/pitri/Desktop/nft-minter v2 (added recipient for NFT)/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";require('dotenv').config();var key=process.env.REACT_APP_PINATA_KEY;var secret=process.env.REACT_APP_PINATA_SECRET;var axios=require('axios');export var pinJSONToIPFS=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(JSONBody){var url;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:url=\"https://api.pinata.cloud/pinning/pinJSONToIPFS\";//making axios POST request to Pinata ⬇️\nreturn _context.abrupt(\"return\",axios.post(url,JSONBody,{headers:{pinata_api_key:key,pinata_secret_api_key:secret}}).then(function(response){return{success:true,pinataUrl:\"https://gateway.pinata.cloud/ipfs/\"+response.data.IpfsHash};}).catch(function(error){console.log(error);return{success:false,message:error.message};}));case 2:case\"end\":return _context.stop();}}},_callee);}));return function pinJSONToIPFS(_x){return _ref.apply(this,arguments);};}();","map":{"version":3,"sources":["C:/Users/pitri/Desktop/nft-minter v2 (added recipient for NFT)/src/utils/pinata.js"],"names":["require","config","key","process","env","REACT_APP_PINATA_KEY","secret","REACT_APP_PINATA_SECRET","axios","pinJSONToIPFS","JSONBody","url","post","headers","pinata_api_key","pinata_secret_api_key","then","response","success","pinataUrl","data","IpfsHash","catch","error","console","log","message"],"mappings":"uWAAAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB,GACA,GAAMC,CAAAA,GAAG,CAAGC,OAAO,CAACC,GAAR,CAAYC,oBAAxB,CACA,GAAMC,CAAAA,MAAM,CAAGH,OAAO,CAACC,GAAR,CAAYG,uBAA3B,CAEA,GAAMC,CAAAA,KAAK,CAAGR,OAAO,CAAC,OAAD,CAArB,CAEA,MAAO,IAAMS,CAAAA,aAAa,0FAAG,iBAAMC,QAAN,0HACnBC,GADmB,kDAEzB;AAFyB,gCAGlBH,KAAK,CACPI,IADE,CACGD,GADH,CACQD,QADR,CACkB,CACjBG,OAAO,CAAE,CACLC,cAAc,CAAEZ,GADX,CAELa,qBAAqB,CAAET,MAFlB,CADQ,CADlB,EAOFU,IAPE,CAOG,SAAUC,QAAV,CAAoB,CACvB,MAAO,CACHC,OAAO,CAAE,IADN,CAEHC,SAAS,CAAE,qCAAuCF,QAAQ,CAACG,IAAT,CAAcC,QAF7D,CAAP,CAIF,CAZE,EAaFC,KAbE,CAaI,SAAUC,KAAV,CAAiB,CACpBC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACA,MAAO,CACHL,OAAO,CAAE,KADN,CAEHQ,OAAO,CAAEH,KAAK,CAACG,OAFZ,CAAP,CAKP,CApBM,CAHkB,wDAAH,kBAAbjB,CAAAA,aAAa,4CAAnB","sourcesContent":["require('dotenv').config();\r\nconst key = process.env.REACT_APP_PINATA_KEY;\r\nconst secret = process.env.REACT_APP_PINATA_SECRET;\r\n\r\nconst axios = require('axios');\r\n\r\nexport const pinJSONToIPFS = async(JSONBody) => {\r\n    const url = `https://api.pinata.cloud/pinning/pinJSONToIPFS`;\r\n    //making axios POST request to Pinata ⬇️\r\n    return axios \r\n        .post(url, JSONBody, {\r\n            headers: {\r\n                pinata_api_key: key,\r\n                pinata_secret_api_key: secret,\r\n            }\r\n        })\r\n        .then(function (response) {\r\n           return {\r\n               success: true,\r\n               pinataUrl: \"https://gateway.pinata.cloud/ipfs/\" + response.data.IpfsHash\r\n           };\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error)\r\n            return {\r\n                success: false,\r\n                message: error.message,\r\n            }\r\n\r\n    });\r\n};"]},"metadata":{},"sourceType":"module"}